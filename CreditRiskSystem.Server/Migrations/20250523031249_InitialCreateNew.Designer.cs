// <auto-generated />
using System;
using CreditRiskSystem.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CreditRiskSystem.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250523031249_InitialCreateNew")]
    partial class InitialCreateNew
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CreditRiskSystem.Common.Models.FinancialData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("EBIT")
                        .HasColumnType("double precision");

                    b.Property<double>("MarketValueOfEquity")
                        .HasColumnType("double precision");

                    b.Property<double>("RetainedEarnings")
                        .HasColumnType("double precision");

                    b.Property<double>("Revenue")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalAssets")
                        .HasColumnType("double precision");

                    b.Property<double>("TotalLiabilities")
                        .HasColumnType("double precision");

                    b.Property<double>("WorkingCapital")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("FinancialData");
                });

            modelBuilder.Entity("CreditRiskSystem.Common.Models.RiskAssessmentResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("AltmanZScore")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("CalculatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("FinancialDataId")
                        .HasColumnType("uuid");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RiskLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FinancialDataId");

                    b.ToTable("RiskAssessmentResults");
                });

            modelBuilder.Entity("CreditRiskSystem.Common.Models.RiskAssessmentResult", b =>
                {
                    b.HasOne("CreditRiskSystem.Common.Models.FinancialData", "FinancialData")
                        .WithMany()
                        .HasForeignKey("FinancialDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialData");
                });
#pragma warning restore 612, 618
        }
    }
}
